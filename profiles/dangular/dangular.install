<?php

/**
 * @file
 * Install, update and uninstall functions for the Dangular installation
 * profile.
 */

use Drupal\user\Entity\User;
use Drupal\shortcut\Entity\Shortcut;
use \Drupal\node\Entity\Node;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for Dangular Profile.
 *
 * @see system_install()
 */
function dangular_install() {
  // Set front page to "node".
  \Drupal::configFactory()
    ->getEditable('system.site')
    ->set('page.front', '/node')
    ->save(TRUE);

  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // Populate the default shortcut set.
  Shortcut::create(
    [
      'shortcut_set' => 'default',
      'title' => t('Dangular Grid'),
      'weight' => 1,
      'link' => ['uri' => 'internal:/dangular-image-grid'],
    ]
  )->save();

  // Set the default and admin theme
  \Drupal::configFactory()
    ->getEditable('system.theme')
    ->set('default', 'dangulartheme')
    ->set('admin', 'seven')
    ->save(TRUE);

  // Enable the admin theme.
  \Drupal::configFactory()
    ->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save(TRUE);

  // Set the homepage to the grid view.
  \Drupal::configFactory()
    ->getEditable('system.site')
    ->set('name', 'Dangular')
    ->set('mail', 'admin@example.com')
    ->set('slogan', '')
    ->set('page', [
      '403' => '',
      '404' => '',
      'front' => '/dangular-image-grid',
    ])
    ->set('admin_compact_mode', false)
    ->set('weight_select_max', 100)
    ->set('langcode', 'en')
    ->set('default_langcode', 'en')
    ->save(TRUE);

  // Generate content for the grid
  $profile_path = drupal_get_path('profile', 'dangular');
  $cages = file_scan_directory($profile_path . '/cages', '/./');
  $path = explode('/', __FILE__);
  array_pop($path);
  array_pop($path);
  array_pop($path);
  $path = implode('/', $path);

  foreach ($cages as $cage => $cage_data) {
    // Create file object from remote URL.
    $data = file_get_contents($path . '/' . $cage, FILE_USE_INCLUDE_PATH);
    $file = file_save_data($data, 'public://' . $cage_data->name . '.jpg', FILE_EXISTS_REPLACE);

    // Create node object with attached file.
    $node = Node::create([
      'type' => 'dangular_grid_item',
      'title' => $cage_data->name,
      'field_dangular_grid_image' => [
          'target_id' => $file->id(),
      ],
    ]);
    $node->save();
  }
}

